@@ -1,1649 +0,0 @@
{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from scipy.io import mmread\n",
    "\n",
    "Matrix = (mmread('matrix.mtx'))\n",
    "df = Matrix.todense()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "matrix_df = pd.DataFrame(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>...</th>\n",
       "      <th>2690</th>\n",
       "      <th>2691</th>\n",
       "      <th>2692</th>\n",
       "      <th>2693</th>\n",
       "      <th>2694</th>\n",
       "      <th>2695</th>\n",
       "      <th>2696</th>\n",
       "      <th>2697</th>\n",
       "      <th>2698</th>\n",
       "      <th>2699</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 2700 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   0     1     2     3     4     5     6     7     8     9     ...  2690  \\\n",
       "0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  ...   0.0   \n",
       "1   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  ...   0.0   \n",
       "2   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  ...   0.0   \n",
       "3   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  ...   0.0   \n",
       "4   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  ...   0.0   \n",
       "\n",
       "   2691  2692  2693  2694  2695  2696  2697  2698  2699  \n",
       "0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n",
       "1   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n",
       "2   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n",
       "3   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n",
       "4   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n",
       "\n",
       "[5 rows x 2700 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "matrix_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>...</th>\n",
       "      <th>2690</th>\n",
       "      <th>2691</th>\n",
       "      <th>2692</th>\n",
       "      <th>2693</th>\n",
       "      <th>2694</th>\n",
       "      <th>2695</th>\n",
       "      <th>2696</th>\n",
       "      <th>2697</th>\n",
       "      <th>2698</th>\n",
       "      <th>2699</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32733</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32734</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32735</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32736</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32737</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>32738 rows Ã— 2700 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       0     1     2     3     4     5     6     7     8     9     ...  2690  \\\n",
       "0       0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  ...   0.0   \n",
       "1       0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  ...   0.0   \n",
       "2       0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  ...   0.0   \n",
       "3       0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  ...   0.0   \n",
       "4       0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  ...   0.0   \n",
       "...     ...   ...   ...   ...   ...   ...   ...   ...   ...   ...  ...   ...   \n",
       "32733   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  ...   0.0   \n",
       "32734   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  ...   0.0   \n",
       "32735   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  ...   0.0   \n",
       "32736   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  ...   0.0   \n",
       "32737   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  ...   0.0   \n",
       "\n",
       "       2691  2692  2693  2694  2695  2696  2697  2698  2699  \n",
       "0       0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n",
       "1       0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n",
       "2       0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n",
       "3       0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n",
       "4       0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n",
       "...     ...   ...   ...   ...   ...   ...   ...   ...   ...  \n",
       "32733   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n",
       "32734   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n",
       "32735   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n",
       "32736   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n",
       "32737   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0  \n",
       "\n",
       "[32738 rows x 2700 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "matrix_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "32738"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(matrix_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "genes_df = pd.read_csv('genes.tsv', delimiter=\"\\t\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ENSG00000243485</th>\n",
       "      <th>MIR1302-10</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ENSG00000237613</td>\n",
       "      <td>FAM138A</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>ENSG00000186092</td>\n",
       "      <td>OR4F5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ENSG00000238009</td>\n",
       "      <td>RP11-34P13.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>ENSG00000239945</td>\n",
       "      <td>RP11-34P13.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>ENSG00000237683</td>\n",
       "      <td>AL627309.1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   ENSG00000243485    MIR1302-10\n",
       "0  ENSG00000237613       FAM138A\n",
       "1  ENSG00000186092         OR4F5\n",
       "2  ENSG00000238009  RP11-34P13.7\n",
       "3  ENSG00000239945  RP11-34P13.8\n",
       "4  ENSG00000237683    AL627309.1"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "genes_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "barcodes_df= pd.read_csv('barcodes.tsv',delimiter=\"\\t\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>AAACATACAACCAC-1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AAACATTGAGCTAC-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>AAACATTGATCAGC-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AAACCGTGCTTCCG-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AAACCGTGTATGCG-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>AAACGCACTGGTAC-1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   AAACATACAACCAC-1\n",
       "0  AAACATTGAGCTAC-1\n",
       "1  AAACATTGATCAGC-1\n",
       "2  AAACCGTGCTTCCG-1\n",
       "3  AAACCGTGTATGCG-1\n",
       "4  AAACGCACTGGTAC-1"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "barcodes_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "human_cl_markrs_df = pd.read_csv('human_cell_markers.txt',delimiter=\"\\t\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>speciesType</th>\n",
       "      <th>tissueType</th>\n",
       "      <th>UberonOntologyID</th>\n",
       "      <th>cancerType</th>\n",
       "      <th>cellType</th>\n",
       "      <th>cellName</th>\n",
       "      <th>CellOntologyID</th>\n",
       "      <th>cellMarker</th>\n",
       "      <th>geneSymbol</th>\n",
       "      <th>geneID</th>\n",
       "      <th>proteinName</th>\n",
       "      <th>proteinID</th>\n",
       "      <th>markerResource</th>\n",
       "      <th>PMID</th>\n",
       "      <th>Company</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Human</td>\n",
       "      <td>Kidney</td>\n",
       "      <td>UBERON_0002113</td>\n",
       "      <td>Normal</td>\n",
       "      <td>Normal cell</td>\n",
       "      <td>Proximal tubular cell</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Intestinal Alkaline Phosphatase</td>\n",
       "      <td>ALPI</td>\n",
       "      <td>248</td>\n",
       "      <td>PPBI</td>\n",
       "      <td>P09923</td>\n",
       "      <td>Experiment</td>\n",
       "      <td>9263997</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Human</td>\n",
       "      <td>Liver</td>\n",
       "      <td>UBERON_0002107</td>\n",
       "      <td>Normal</td>\n",
       "      <td>Normal cell</td>\n",
       "      <td>Ito cell (hepatic stellate cell)</td>\n",
       "      <td>CL_0000632</td>\n",
       "      <td>Synaptophysin</td>\n",
       "      <td>SYP</td>\n",
       "      <td>6855</td>\n",
       "      <td>SYPH</td>\n",
       "      <td>P08247</td>\n",
       "      <td>Experiment</td>\n",
       "      <td>10595912</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Human</td>\n",
       "      <td>Endometrium</td>\n",
       "      <td>UBERON_0001295</td>\n",
       "      <td>Normal</td>\n",
       "      <td>Normal cell</td>\n",
       "      <td>Trophoblast cell</td>\n",
       "      <td>CL_0000351</td>\n",
       "      <td>CEACAM1</td>\n",
       "      <td>CEACAM1</td>\n",
       "      <td>634</td>\n",
       "      <td>CEAM1</td>\n",
       "      <td>P13688</td>\n",
       "      <td>Experiment</td>\n",
       "      <td>10751340</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Human</td>\n",
       "      <td>Germ</td>\n",
       "      <td>UBERON_0000923</td>\n",
       "      <td>Normal</td>\n",
       "      <td>Normal cell</td>\n",
       "      <td>Primordial germ cell</td>\n",
       "      <td>CL_0000670</td>\n",
       "      <td>VASA</td>\n",
       "      <td>DDX4</td>\n",
       "      <td>54514</td>\n",
       "      <td>DDX4</td>\n",
       "      <td>Q9NQI0</td>\n",
       "      <td>Experiment</td>\n",
       "      <td>10920202</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Human</td>\n",
       "      <td>Corneal epithelium</td>\n",
       "      <td>UBERON_0001772</td>\n",
       "      <td>Normal</td>\n",
       "      <td>Normal cell</td>\n",
       "      <td>Epithelial cell</td>\n",
       "      <td>CL_0000066</td>\n",
       "      <td>KLF6</td>\n",
       "      <td>KLF6</td>\n",
       "      <td>1316</td>\n",
       "      <td>KLF6</td>\n",
       "      <td>Q99612</td>\n",
       "      <td>Experiment</td>\n",
       "      <td>12407152</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  speciesType          tissueType UberonOntologyID cancerType     cellType  \\\n",
       "0       Human              Kidney   UBERON_0002113     Normal  Normal cell   \n",
       "1       Human               Liver   UBERON_0002107     Normal  Normal cell   \n",
       "2       Human         Endometrium   UBERON_0001295     Normal  Normal cell   \n",
       "3       Human                Germ   UBERON_0000923     Normal  Normal cell   \n",
       "4       Human  Corneal epithelium   UBERON_0001772     Normal  Normal cell   \n",
       "\n",
       "                           cellName CellOntologyID  \\\n",
       "0             Proximal tubular cell            NaN   \n",
       "1  Ito cell (hepatic stellate cell)     CL_0000632   \n",
       "2                  Trophoblast cell     CL_0000351   \n",
       "3              Primordial germ cell     CL_0000670   \n",
       "4                   Epithelial cell     CL_0000066   \n",
       "\n",
       "                        cellMarker geneSymbol geneID proteinName proteinID  \\\n",
       "0  Intestinal Alkaline Phosphatase       ALPI    248        PPBI    P09923   \n",
       "1                    Synaptophysin        SYP   6855        SYPH    P08247   \n",
       "2                          CEACAM1    CEACAM1    634       CEAM1    P13688   \n",
       "3                             VASA       DDX4  54514        DDX4    Q9NQI0   \n",
       "4                             KLF6       KLF6   1316        KLF6    Q99612   \n",
       "\n",
       "  markerResource      PMID Company  \n",
       "0     Experiment   9263997     NaN  \n",
       "1     Experiment  10595912     NaN  \n",
       "2     Experiment  10751340     NaN  \n",
       "3     Experiment  10920202     NaN  \n",
       "4     Experiment  12407152     NaN  "
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "human_cl_markrs_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "4123"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(human_cl_markrs_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "human_cl_kidney_mrkrs = human_cl_markrs_df.loc[human_cl_markrs_df['tissueType'] == \"Kidney\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Proximal tubular cell', 'Tumor endothelial cell', 'T cell',\n",
       "       'Monocyte', 'B cell', 'Cancer stem cell', 'EBV+ B lymphoma cell',\n",
       "       'Cancer cell', 'Infiltrated mononuclear cell', 'Mesangial cell',\n",
       "       'Epithelial cell', 'Neuron', 'Oligodendrocyte', 'Astrocyte',\n",
       "       'Microglial cell', 'Stem cell', 'Natural killer cell',\n",
       "       'Natural killer T (NKT) cell', 'CD8+ T cell', 'Neutrophil',\n",
       "       'Mast cell', 'Plasmacytoid dendritic cell', 'T helper cell',\n",
       "       'Nephron epithelial cell', 'Urothelium cell', 'Endothelial cell',\n",
       "       'Plasma cell', 'Erythroblast', 'Regulatory T (Treg) cell',\n",
       "       'Vascular endothelial cell', 'Podocyte', 'Proximal tubule cell',\n",
       "       'Distal convoluted tubule cell', 'Collecting duct principal cell',\n",
       "       'Collecting duct intercalated cell',\n",
       "       'Collecting duct transient cell', 'Fibroblast', 'Macrophage',\n",
       "       'Cortical cell', 'Medullary cell'], dtype=object)"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "human_cl_kidney_mrkrs.cellName.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Kidney', 'Liver', 'Endometrium', 'Germ', 'Corneal epithelium',\n",
       "       'Placenta', 'Periosteum', 'Amniotic membrane', 'Primitive streak',\n",
       "       'Adipose tissue', 'Scalp', 'Heart', 'Chorionic villus', 'Brain',\n",
       "       'Amniotic fluid', 'Cartilage', 'Bone', 'Retina',\n",
       "       'Peripheral blood', 'Blood', 'Tongue', 'Gingiva', 'Undefined',\n",
       "       'Uterus', 'Dental pulp', 'Breast', 'Stomach', 'Nucleus pulposus',\n",
       "       'Urine', 'Pancreas', 'Colon', 'Gonad', 'Testis', 'Bone marrow',\n",
       "       'Lung', 'Embryo', 'Skin', 'Thymus', 'Blood vessel',\n",
       "       'Synovial fluid', 'Periodontal ligament', 'Lymph node',\n",
       "       'Colorectum', 'Pancreatic islet', 'Synovium', 'Oral mucosa',\n",
       "       'Skeletal muscle', 'Eye', 'Esophagus', 'Umbilical cord blood',\n",
       "       'Hair follicle', 'Ovarian follicle', 'Limbal epithelium',\n",
       "       'Oral cavity', 'Nasal concha', 'Oviduct', 'Cornea',\n",
       "       'Sclerocorneal tissue', 'Intervertebral disc', 'Plasma',\n",
       "       'Embryoid body', 'Inferior colliculus', 'Ovary', 'Ovarian cortex',\n",
       "       'Subcutaneous adipose tissue', 'Prostate', 'Myocardium',\n",
       "       'Deciduous tooth', 'Salivary gland', 'Tonsil', 'Gastric gland',\n",
       "       'Vagina', 'Muscle', 'Abdominal adipose tissue', 'Venous blood',\n",
       "       'Parotid gland', 'Antecubital vein', 'Intestinal crypt',\n",
       "       'Endometrium stroma', 'Foreskin', 'Submandibular gland',\n",
       "       'Retinal pigment epithelium', 'Lymph', 'Gastrointestinal tract',\n",
       "       'Lymphoid tissue', 'Renal glomerulus', 'Pyloric gland',\n",
       "       'Corpus luteum', 'Nasal epithelium', 'Adventitia',\n",
       "       'Pancreatic acinar tissue', 'Thyroid', 'Airway epithelium',\n",
       "       'Gall bladder', 'Umbilical cord', 'Vocal fold', 'Fetal brain',\n",
       "       'Dermis', 'Ascites', 'Molar', 'Embryonic stem cell', 'Midbrain',\n",
       "       'Corneal endothelium', 'Visceral adipose tissue', 'Gastric corpus',\n",
       "       'Larynx', 'Pluripotent stem cell', 'Tooth', 'Splenic red pulp',\n",
       "       'Gut', 'Fetal liver', 'Laryngeal squamous epithelium',\n",
       "       'Mammary gland', 'Pleura', 'Mammary epithelium', 'Spinal cord',\n",
       "       'Small intestinal crypt', 'Sputum', 'Bronchoalveolar system',\n",
       "       'Dorsolateral prefrontal cortex', 'Myometrium', 'Optic nerve',\n",
       "       'Gastric epithelium', 'Epithelium', 'Adrenal gland',\n",
       "       'Sinonasal mucosa', 'Serum', 'Premolar',\n",
       "       'Anterior cruciate ligament', 'Bladder', 'Jejunum',\n",
       "       'Umbilical vein', 'Osteoarthritic cartilage', 'Decidua',\n",
       "       'Sympathetic ganglion', 'Alveolus', 'Seminal plasma', 'Duodenum',\n",
       "       'Rectum', 'Fetal pancreas', 'Spleen', 'White adipose tissue',\n",
       "       'Brown adipose tissue', 'Hippocampus', 'Intestine', 'Nerve',\n",
       "       'Artery', 'Lacrimal gland', 'Taste bud', 'Meniscus', 'Peyer patch',\n",
       "       'Epidermis', 'Small intestine', 'Cerebellum',\n",
       "       'Inner nuclear layer of retina', 'Ganglion cell layer of retina',\n",
       "       'Colon epithelium', 'Cochlea', 'Basilar membrane',\n",
       "       'Peritoneal cavity', 'Yolk sac', 'Heart muscle', 'Ileum',\n",
       "       'Inner Ear', 'Mesonephros', 'Bronchiole', 'Neural tube',\n",
       "       'Mesenteric lymph node', 'Carotid artery', 'Aorta', 'Fetal kidney',\n",
       "       'Tendon', 'Ligament', 'Fat pad', 'Whartons jelly',\n",
       "       'Embryonic prefrontal cortex', 'Embryonic heart',\n",
       "       'Embryonic brain', 'Trachea', 'Large intestine', 'Fetal gonad'],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "human_cl_markrs_df.tissueType.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "single_cl_markers_df = pd.read_csv('Single_cell_markers.txt',delimiter=\"\\t\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>speciesType</th>\n",
       "      <th>tissueType</th>\n",
       "      <th>UberonOntologyID</th>\n",
       "      <th>cancerType</th>\n",
       "      <th>cellType</th>\n",
       "      <th>cellName</th>\n",
       "      <th>CellOntologyID</th>\n",
       "      <th>cellMarker</th>\n",
       "      <th>geneSymbol</th>\n",
       "      <th>geneID</th>\n",
       "      <th>proteinName</th>\n",
       "      <th>proteinID</th>\n",
       "      <th>markerResource</th>\n",
       "      <th>PMID</th>\n",
       "      <th>Company</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Human</td>\n",
       "      <td>Lung</td>\n",
       "      <td>UBERON_0002048</td>\n",
       "      <td>Normal</td>\n",
       "      <td>Normal cell</td>\n",
       "      <td>Type II pneumocyte</td>\n",
       "      <td>CL_0002063</td>\n",
       "      <td>ABCA3, SLC34A2</td>\n",
       "      <td>ABCA3, SLC34A2</td>\n",
       "      <td>21, 10568</td>\n",
       "      <td>ABCA3, NPT2B</td>\n",
       "      <td>Q99758, O95436</td>\n",
       "      <td>Single-cell sequencing</td>\n",
       "      <td>27942595</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Human</td>\n",
       "      <td>Lung</td>\n",
       "      <td>UBERON_0002048</td>\n",
       "      <td>Normal</td>\n",
       "      <td>Normal cell</td>\n",
       "      <td>Airway secretory cell</td>\n",
       "      <td>CL_1000272</td>\n",
       "      <td>AQP3, MUC5AC, MUC5B, PIGR, SCGB1A1</td>\n",
       "      <td>AQP3, MUC5AC, MUC5B, PIGR, SCGB1A1</td>\n",
       "      <td>360, 4586, 727897, 5284, 7356</td>\n",
       "      <td>AQP3, MUC5A, MUC5B, PIGR, UTER</td>\n",
       "      <td>Q92482, P98088, Q9HC84, P01833, P11684</td>\n",
       "      <td>Single-cell sequencing</td>\n",
       "      <td>27942595</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Human</td>\n",
       "      <td>Pancreas</td>\n",
       "      <td>UBERON_0001264</td>\n",
       "      <td>Normal</td>\n",
       "      <td>Normal cell</td>\n",
       "      <td>Alpha cell</td>\n",
       "      <td>CL_0000171</td>\n",
       "      <td>ARX, CLIM1, CRYBA2, FEV, GBA, HMGB3, ILTMP, IR...</td>\n",
       "      <td>UBA2, LDB2, CRYBA2, FEV, GBA, HMGB3, TM4SF4, I...</td>\n",
       "      <td>10054, 9079, 1412, 54738, 2629, 3149, 7104, 15...</td>\n",
       "      <td>ARX, PDLI1, CRBA2, FEV, GLCM, HMGB3, T4S4, IRX...</td>\n",
       "      <td>Q96QS3, O00151, P53672, Q99581, P04062, O15347...</td>\n",
       "      <td>Single-cell sequencing</td>\n",
       "      <td>27693023</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Human</td>\n",
       "      <td>Pancreas</td>\n",
       "      <td>UBERON_0001264</td>\n",
       "      <td>Normal</td>\n",
       "      <td>Normal cell</td>\n",
       "      <td>Beta cell</td>\n",
       "      <td>CL_0000169</td>\n",
       "      <td>BMP-5, CDKN1C, CRTR1, DLK1, NPTX2, PACAP, PDX1...</td>\n",
       "      <td>BMP5, CDKN1C, TFCP2L1, DLK1, NPTX2, MZB1, PDX1...</td>\n",
       "      <td>653, 1028, 29842, 8788, 4885, 51237, 3651, 520...</td>\n",
       "      <td>BMP5, CDN1C, TF2L1, DLK1, NPTX2, PACA, ODPX, F...</td>\n",
       "      <td>P22003, P49918, Q9NZI6, P80370, P47972, P18509...</td>\n",
       "      <td>Single-cell sequencing</td>\n",
       "      <td>27693023</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Human</td>\n",
       "      <td>Pancreas</td>\n",
       "      <td>UBERON_0001264</td>\n",
       "      <td>Normal</td>\n",
       "      <td>Normal cell</td>\n",
       "      <td>Delta cell</td>\n",
       "      <td>CL_0000173</td>\n",
       "      <td>CHE1, ESE3B, ETV1, GABRG2, HER4, ISL1, LCORL, ...</td>\n",
       "      <td>AATF, EHF, ETV1, GABRG2, ERBB4, ISL1, LCORL, P...</td>\n",
       "      <td>26574, 26298, 2115, 2566, 2066, 3670, 254251, ...</td>\n",
       "      <td>AATF, EHF, ETV1, GBRG2, ERBB4, ISL1, LCORL, PS...</td>\n",
       "      <td>Q9NY61, Q9NZC4, P50549, P18507, Q15303, P61371...</td>\n",
       "      <td>Single-cell sequencing</td>\n",
       "      <td>27693023</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  speciesType tissueType UberonOntologyID cancerType     cellType  \\\n",
       "0       Human       Lung   UBERON_0002048     Normal  Normal cell   \n",
       "1       Human       Lung   UBERON_0002048     Normal  Normal cell   \n",
       "2       Human   Pancreas   UBERON_0001264     Normal  Normal cell   \n",
       "3       Human   Pancreas   UBERON_0001264     Normal  Normal cell   \n",
       "4       Human   Pancreas   UBERON_0001264     Normal  Normal cell   \n",
       "\n",
       "                cellName CellOntologyID  \\\n",
       "0     Type II pneumocyte     CL_0002063   \n",
       "1  Airway secretory cell     CL_1000272   \n",
       "2             Alpha cell     CL_0000171   \n",
       "3              Beta cell     CL_0000169   \n",
       "4             Delta cell     CL_0000173   \n",
       "\n",
       "                                          cellMarker  \\\n",
       "0                                     ABCA3, SLC34A2   \n",
       "1                 AQP3, MUC5AC, MUC5B, PIGR, SCGB1A1   \n",
       "2  ARX, CLIM1, CRYBA2, FEV, GBA, HMGB3, ILTMP, IR...   \n",
       "3  BMP-5, CDKN1C, CRTR1, DLK1, NPTX2, PACAP, PDX1...   \n",
       "4  CHE1, ESE3B, ETV1, GABRG2, HER4, ISL1, LCORL, ...   \n",
       "\n",
       "                                          geneSymbol  \\\n",
       "0                                     ABCA3, SLC34A2   \n",
       "1                 AQP3, MUC5AC, MUC5B, PIGR, SCGB1A1   \n",
       "2  UBA2, LDB2, CRYBA2, FEV, GBA, HMGB3, TM4SF4, I...   \n",
       "3  BMP5, CDKN1C, TFCP2L1, DLK1, NPTX2, MZB1, PDX1...   \n",
       "4  AATF, EHF, ETV1, GABRG2, ERBB4, ISL1, LCORL, P...   \n",
       "\n",
       "                                              geneID  \\\n",
       "0                                          21, 10568   \n",
       "1                      360, 4586, 727897, 5284, 7356   \n",
       "2  10054, 9079, 1412, 54738, 2629, 3149, 7104, 15...   \n",
       "3  653, 1028, 29842, 8788, 4885, 51237, 3651, 520...   \n",
       "4  26574, 26298, 2115, 2566, 2066, 3670, 254251, ...   \n",
       "\n",
       "                                         proteinName  \\\n",
       "0                                       ABCA3, NPT2B   \n",
       "1                     AQP3, MUC5A, MUC5B, PIGR, UTER   \n",
       "2  ARX, PDLI1, CRBA2, FEV, GLCM, HMGB3, T4S4, IRX...   \n",
       "3  BMP5, CDN1C, TF2L1, DLK1, NPTX2, PACA, ODPX, F...   \n",
       "4  AATF, EHF, ETV1, GBRG2, ERBB4, ISL1, LCORL, PS...   \n",
       "\n",
       "                                           proteinID          markerResource  \\\n",
       "0                                     Q99758, O95436  Single-cell sequencing   \n",
       "1             Q92482, P98088, Q9HC84, P01833, P11684  Single-cell sequencing   \n",
       "2  Q96QS3, O00151, P53672, Q99581, P04062, O15347...  Single-cell sequencing   \n",
       "3  P22003, P49918, Q9NZI6, P80370, P47972, P18509...  Single-cell sequencing   \n",
       "4  Q9NY61, Q9NZC4, P50549, P18507, Q15303, P61371...  Single-cell sequencing   \n",
       "\n",
       "       PMID  Company  \n",
       "0  27942595      NaN  \n",
       "1  27942595      NaN  \n",
       "2  27693023      NaN  \n",
       "3  27693023      NaN  \n",
       "4  27693023      NaN  "
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "single_cl_markers_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "535"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(single_cl_markers_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Type II pneumocyte', 'Airway secretory cell', 'Alpha cell',\n",
       "       'Beta cell', 'Delta cell', 'Pancreatic polypeptide cell',\n",
       "       'Astrocyte', 'Neuron', 'Neuronal progenitor cell',\n",
       "       'Endothelial cell', 'Trophoblast stem cell',\n",
       "       'Definitive endoderm cell', 'Embryonic stem cell',\n",
       "       'Lung epithelial cell', 'Idiopathic pulmonary fibrosis cell',\n",
       "       'Fibroblast', 'Myofibroblast', 'Smooth muscle cell', 'Pericyte',\n",
       "       'Matrix fibroblast', 'Myeloid cell', 'Immune cell',\n",
       "       'Epithelial cell', 'Muscle cell', 'Stromal cell', 'Neural cell',\n",
       "       'Hepatocyte', 'Spermatogonial stem cell', 'Spermatogonium',\n",
       "       'T cell', 'CD4+ T cell', 'CD8+ T cell', 'Regulatory T (Treg) cell',\n",
       "       'B cell', 'Macrophage', 'Dendritic cell', 'Natural killer cell',\n",
       "       'Cancer cell', 'Hematopoietic cell', 'Naive T cell',\n",
       "       'CD4+ memory T cell', 'Natural killer T (NKT) cell',\n",
       "       'CD14+CD16+ monocyte', 'Monocyte derived dendritic cell',\n",
       "       'Megakaryocyte progenitor cell',\n",
       "       'pro-Natural killer cell (pro-NK cell)',\n",
       "       'Plasmacytoid dendritic cell', 'Oligodendrocyte',\n",
       "       'Trophectoderm cell', 'Primitive endoderm cell', 'Epiblast cell',\n",
       "       'Neural progenitor cell', 'Interneuron',\n",
       "       'Oligodendrocyte progenitor cell', 'Microglial cell',\n",
       "       'Acinar cell', 'Oligodendrocyte precursor cell',\n",
       "       'Cancer stem cell', 'Mesenchymal cell', 'Naive CD8+ T cell',\n",
       "       'Effector CD8+ memory T (Tem) cell',\n",
       "       'Mucosal-associated invariant T cell', 'Exhausted CD8+ T cell',\n",
       "       'Naive CD4+ T cell', 'T helper cell', 'Exhausted CD4+ T cell',\n",
       "       'CD4+ cytotoxic T cell', 'Lymphocyte', 'CXCR6+ T cell',\n",
       "       'Granulocyte', 'Monocyte', 'Hormone sensing progenitor',\n",
       "       'Hormone sensing differentiated cell', 'Luminal progenitor',\n",
       "       'Differentiated alveolar cell', 'Alveolar progenitor cell',\n",
       "       'Basal cell', 'Myoepithelial cell', 'Procr+ basal cell',\n",
       "       'Olfactory sensory neuron', 'Lipofibroblast',\n",
       "       'Mesenchymal progenitor cell', 'Mesothelial cell',\n",
       "       'Early enterocyte precursor cell', 'Transit amplifying (TA) cell',\n",
       "       'Enteroendocrine cell', 'Late enterocyte precursor cell',\n",
       "       'Enterocyte', 'Goblet cell', 'Enteroendocrine precursor cell',\n",
       "       'Brush cell (Tuft cell)', 'Paneth cell', 'Mural cell',\n",
       "       'Erythroid cell', 'Epidermal stem cell', 'Cardiomyocyte',\n",
       "       'Myotube', 'Myoblast', 'Liver bud hepatic cell', 'Lymphoblast',\n",
       "       'Erythroblast', 'Kupffer cell', 'Secretory cell', 'Ciliated cell',\n",
       "       'Neuroendocrine cell', 'Ionocyte cell', 'Cycling basal cell',\n",
       "       'FOXN4+ cell', 'SLC16A7+ cell', 'Krt4/13+ cell', 'Clara cell',\n",
       "       'Axin2+ cell', 'Pdgfrapha+ cell', 'Axin2-Palpha+ cell',\n",
       "       'Wnt2+ cell', 'Lgr5+ cell', 'Lgr6+ cell',\n",
       "       'Vascular endothelial cell', 'Podocyte', 'Proximal tubule cell',\n",
       "       'Distal convoluted tubule cell', 'Collecting duct principal cell',\n",
       "       'Collecting duct intercalated cell',\n",
       "       'Collecting duct transient cell', 'Neutrophil', 'Cortical cell',\n",
       "       'Medullary cell', 'Mesangial cell', 'Ductal cell', 'PP cell',\n",
       "       'Early neuroblast', 'Ventral otocyst', 'Late neuroblast',\n",
       "       'Dorsal otocyst', 'Neuroblast', 'O cell', 'Chandelier cell',\n",
       "       'Basket cell', 'Long-projecting GABAergic cell', 'Martinotti cell',\n",
       "       'Interneuron-selective cell', 'CCK basket cell', 'Ependymal cell',\n",
       "       'Quiescent neural stem cell', 'Activated neural stem cell',\n",
       "       'Late activated neural stem cell', 'Type I spiral ganglion neuron',\n",
       "       'Type II spiral ganglion neuron', 'Progenitor cell',\n",
       "       'Precursor cell', 'Immature olfactory sensory neuron',\n",
       "       'Mature olfactory sensory neuron', 'Ciliated epithelial cell',\n",
       "       'Secretory progenitor cell', 'FGFR1LowNME5- epithelial cell',\n",
       "       'FGFR1HighNME5- epithelial cell', 'Multipotent progenitor cell',\n",
       "       'HES1High progenitor cell', 'Parietal progenitor cell',\n",
       "       'Pit progenitor cell', 'Pit cell', 'Tuft progenitor cell',\n",
       "       'PROCR+ progenitor cell', 'Enterocyte progenitor cell',\n",
       "       'LGR5+ stem cell', 'DCLK1+ progenitor cell',\n",
       "       'MKI67+ progenitor cell', 'PROM1High progenitor cell',\n",
       "       'PROM1Low progenitor cell', 'Goblet progenitor cell',\n",
       "       'Mitotic fetal germ cell',\n",
       "       'Retinoid acid signaling-responsive fetal germ cell',\n",
       "       'Meiotic prophase fetal germ cell',\n",
       "       'Oogenesis phase fetal germ cell',\n",
       "       'Migration phase fetal germ cell',\n",
       "       'Gonadal mitotic phase fetal germ cell',\n",
       "       'Mitotic arrest phase fetal germ cell', 'Sertoli cell',\n",
       "       'Leydig precursor cell', 'Leydig cell', 'Granulosa cell',\n",
       "       'Gonadal endothelial cell', 'Decidual cell',\n",
       "       'Red blood cell (erythrocyte)', 'Vascular smooth muscle cell',\n",
       "       'Villous stromal cell', 'Extravillous trophoblast cell',\n",
       "       'Villous cytotrophoblast', 'Syncytiotrophoblast',\n",
       "       'Luminal progenitor cell', 'Luminal epithelial cell',\n",
       "       'Basal epithelial cell', 'Endocardial cell', 'Arterial cell',\n",
       "       'Venous cell', 'Lymphoid-primed multipotent progenitor cell',\n",
       "       'Multilymphoid progenitor cell', 'Granulocyte-monocyte progenitor',\n",
       "       'Conventional dendritic cell', 'Basophil', 'Eosinophil',\n",
       "       'Megakaryocyte', 'Stem cell', 'Stage I neutrophil',\n",
       "       'Stage II neutrophil', 'CD141+CLEC9A+ dendritic cell',\n",
       "       'CD1C+_A dendritic cell', 'CD1C+_B dendritic cell',\n",
       "       'CD1C-CD141- dendritic cell', 'AXL+SIGLEC6+ dendritic cell',\n",
       "       'Blood progenitor cell', 'Hematopoietic stem cell',\n",
       "       'Activated CD8+ T cell', 'Inflammatory monocyte',\n",
       "       'Germinal center B cell', 'Induced regulatory T (Treg) cell',\n",
       "       'Ly6c+ monocyte', 'Ectoderm cell', 'Mesoderm cell',\n",
       "       'Endoderm cell', 'Extraembryonic cell', 'Visceral endoderm cell',\n",
       "       'Extraembryonic ectoderm cell', 'Primitive streak cell',\n",
       "       'Mesodermal progenitor cell', 'Primitive erythroid cell',\n",
       "       'Allantois cell', 'Pharyngeal mesoderm cell',\n",
       "       'Immature dendritic cell', 'Ureteric bud cell',\n",
       "       'Primitive vesicle cell', 'Mast cell', 'Plasma cell',\n",
       "       'Hematopoietic progenitor cell',\n",
       "       'Long-term hematopoietic stem cell',\n",
       "       'Megakaryocyte-erythroid progenitor', 'Type I pneumocyte',\n",
       "       'Macrophage and dendritic cell precursor cell',\n",
       "       'Myeloid progenitor cell',\n",
       "       'Hematopoietic stem cell progenitor cell',\n",
       "       'Pre-haematopoietic stem cell',\n",
       "       'Pre-megakaryocyte-erythroid progenitor cell',\n",
       "       'Lymphoid-primed multipotent progenitor',\n",
       "       'Common myeloid progenitor', 'Neural stem cell',\n",
       "       'Early intermediate precursor cell', 'Cajal-Retzius cell',\n",
       "       'Bergmann glial cell', 'Olfactory ensheathing glia', 'Glomus cell',\n",
       "       'Type IA spiral ganglion neuron', 'Type IB spiral ganglion neuron',\n",
       "       'Type IC spiral ganglion neuron', 'Lake et al.Science.Ex1',\n",
       "       'Lake et al.Science.Ex2', 'Lake et al.Science.Ex3',\n",
       "       'Lake et al.Science.Ex4', 'Lake et al.Science.Ex5',\n",
       "       'Lake et al.Science.Ex6', 'Lake et al.Science.Ex7',\n",
       "       'Lake et al.Science.Ex8', 'Lake et al.Science.In1',\n",
       "       'Lake et al.Science.In2', 'Lake et al.Science.In3',\n",
       "       'Lake et al.Science.In4', 'Lake et al.Science.In5',\n",
       "       'Lake et al.Science.In6', 'Lake et al.Science.In7',\n",
       "       'Lake et al.Science.In8', 'Rheaume et al.Nat Commun.1',\n",
       "       'Rheaume et al.Nat Commun.2', 'Rheaume et al.Nat Commun.3',\n",
       "       'Rheaume et al.Nat Commun.4', 'Rheaume et al.Nat Commun.5',\n",
       "       'Rheaume et al.Nat Commun.6', 'Rheaume et al.Nat Commun.7',\n",
       "       'Rheaume et al.Nat Commun.8', 'Rheaume et al.Nat Commun.9',\n",
       "       'Rheaume et al.Nat Commun.10', 'Rheaume et al.Nat Commun.11',\n",
       "       'Rheaume et al.Nat Commun.12', 'Rheaume et al.Nat Commun.13',\n",
       "       'Rheaume et al.Nat Commun.14', 'Rheaume et al.Nat Commun.15',\n",
       "       'Rheaume et al.Nat Commun.16', 'Rheaume et al.Nat Commun.17',\n",
       "       'Rheaume et al.Nat Commun.18', 'Rheaume et al.Nat Commun.19',\n",
       "       'Rheaume et al.Nat Commun.20', 'Rheaume et al.Nat Commun.21',\n",
       "       'Rheaume et al.Nat Commun.22', 'Rheaume et al.Nat Commun.23',\n",
       "       'Rheaume et al.Nat Commun.24', 'Rheaume et al.Nat Commun.25',\n",
       "       'Rheaume et al.Nat Commun.26', 'Rheaume et al.Nat Commun.27',\n",
       "       'Rheaume et al.Nat Commun.28', 'Rheaume et al.Nat Commun.29',\n",
       "       'Rheaume et al.Nat Commun.30', 'Rheaume et al.Nat Commun.31',\n",
       "       'Rheaume et al.Nat Commun.32', 'Rheaume et al.Nat Commun.33',\n",
       "       'Rheaume et al.Nat Commun.34', 'Rheaume et al.Nat Commun.35',\n",
       "       'Rheaume et al.Nat Commun.36', 'Rheaume et al.Nat Commun.37',\n",
       "       'Rheaume et al.Nat Commun.38', 'Rheaume et al.Nat Commun.39',\n",
       "       'Rheaume et al.Nat Commun.40', 'Schwalie et al.Nature.P1',\n",
       "       'Schwalie et al.Nature.P2', 'Schwalie et al.Nature.P3',\n",
       "       'Schwalie et al.Nature.G1', 'Schwalie et al.Nature.G2',\n",
       "       'Schwalie et al.Nature.G3', 'Schwalie et al.Nature.G4',\n",
       "       'Lee et al.Cell.A', 'Lee et al.Cell.B', 'Lee et al.Cell.C',\n",
       "       'Lee et al.Cell.D', 'Lee et al.Cell.E', 'Oocyte',\n",
       "       '1-cell stage cell (Blastomere)', '4-cell stage cell (Blastomere)',\n",
       "       '8-cell stage cell (Blastomere)', 'Morula cell (Blastomere)'],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "single_cl_markers_df.cellName.unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "test1_df = pd.read_csv('E-CURD-55.marker_genes_7.tsv',delimiter=\"\\t\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cluster</th>\n",
       "      <th>ref</th>\n",
       "      <th>rank</th>\n",
       "      <th>genes</th>\n",
       "      <th>scores</th>\n",
       "      <th>logfoldchanges</th>\n",
       "      <th>pvals</th>\n",
       "      <th>pvals_adj</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>rest</td>\n",
       "      <td>0</td>\n",
       "      <td>ENSG00000090382</td>\n",
       "      <td>440.78983</td>\n",
       "      <td>6.258866</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>rest</td>\n",
       "      <td>1</td>\n",
       "      <td>ENSG00000101439</td>\n",
       "      <td>387.55554</td>\n",
       "      <td>5.611144</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>rest</td>\n",
       "      <td>2</td>\n",
       "      <td>ENSG00000163220</td>\n",
       "      <td>340.01170</td>\n",
       "      <td>5.836437</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>rest</td>\n",
       "      <td>3</td>\n",
       "      <td>ENSG00000143546</td>\n",
       "      <td>329.63623</td>\n",
       "      <td>6.163567</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>rest</td>\n",
       "      <td>4</td>\n",
       "      <td>ENSG00000085265</td>\n",
       "      <td>320.19144</td>\n",
       "      <td>5.356512</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   cluster   ref  rank            genes     scores  logfoldchanges  pvals  \\\n",
       "0        1  rest     0  ENSG00000090382  440.78983        6.258866    0.0   \n",
       "1        1  rest     1  ENSG00000101439  387.55554        5.611144    0.0   \n",
       "2        1  rest     2  ENSG00000163220  340.01170        5.836437    0.0   \n",
       "3        1  rest     3  ENSG00000143546  329.63623        6.163567    0.0   \n",
       "4        1  rest     4  ENSG00000085265  320.19144        5.356512    0.0   \n",
       "\n",
       "   pvals_adj  \n",
       "0        0.0  \n",
       "1        0.0  \n",
       "2        0.0  \n",
       "3        0.0  \n",
       "4        0.0  "
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test1_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
